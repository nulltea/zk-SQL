/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ZkSQL, ZkSQLInterface } from "../../zkSQL.sol/ZkSQL";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "insertVerifier_",
        type: "address",
      },
      {
        internalType: "address",
        name: "updateVerifier_",
        type: "address",
      },
      {
        internalType: "address",
        name: "deleteVerifier_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "RequestPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "table",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "TableCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "table",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "TableUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "table",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "createTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deleteVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ZkSQL.SqlOperation",
        name: "opcode",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "argsCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newCommitment",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "execRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "insertVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "table",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "argsCommitment",
        type: "uint256",
      },
    ],
    name: "request",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestsCommitments",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tableCommitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620015b9380380620015b983398181016040528101906200003791906200013f565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250507f0db09577058dabc70c0743e4e7e1797c90b7d209a552cc3983dc4a7f0486e02860006040516200010d90620001bc565b90815260200160405180910390208190555050505062000255565b60008151905062000139816200023b565b92915050565b6000806000606084860312156200015557600080fd5b6000620001658682870162000128565b9350506020620001788682870162000128565b92505060406200018b8682870162000128565b9150509250925092565b6000620001a4600683620001d3565b9150620001b18262000212565b600682019050919050565b6000620001c98262000195565b9150819050919050565b600081905092915050565b6000620001eb82620001f2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f7461626c65310000000000000000000000000000000000000000000000000000600082015250565b6200024681620001de565b81146200025257600080fd5b50565b60805160601c60a05160601c60c05160601c611316620002a36000396000818161059b015261091601526000818161067f015261087601526000818161073601526107d501526113166000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806398887caa1161005b57806398887caa14610127578063dc6ad19e14610145578063f861722d14610161578063fe3c04f41461019157610088565b8063093892be1461008d5780634123143b146100bd5780634403e2dc146100ed5780636543e2131461010b575b600080fd5b6100a760048036038101906100a29190610b57565b6101af565b6040516100b49190610ea9565b60405180910390f35b6100d760048036038101906100d29190610c67565b6104f9565b6040516100e49190610efb565b60405180910390f35b6100f5610599565b6040516101029190610e65565b60405180910390f35b61012560048036038101906101209190610c13565b6105bd565b005b61012f61067d565b60405161013c9190610e65565b60405180910390f35b61015f600480360381019061015a9190610c13565b6106a1565b005b61017b60048036038101906101769190610bd2565b610706565b6040516101889190610fad565b60405180910390f35b610199610734565b6040516101a69190610e65565b60405180910390f35b6000806101bb86610758565b905060006001600087815260200190815260200160002080546101dd90611155565b80601f016020809104026020016040519081016040528092919081815260200182805461020990611155565b80156102565780601f1061022b57610100808354040283529160200191610256565b820191906000526020600020905b81548152906001019060200180831161023957829003601f168201915b505050505090506000600367ffffffffffffffff8111156102a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156102ce5781602001602082028036833780820191505090505b509050858160008151811061030c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250506000826040516103289190610e4e565b90815260200160405180910390205481600181518110610371577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505086816002815181106103b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508273ffffffffffffffffffffffffffffffffffffffff16631e8e1e1386836040518363ffffffff1660e01b81526004016103ff929190610ec4565b60206040518083038186803b15801561041757600080fd5b505afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610b2e565b61048e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048590610f8d565b60405180910390fd5b8560008360405161049f9190610e4e565b9081526020016040518091039020819055507fb3b3b1b935c13b8259ef760ae6538d44cc98c9c394d621d8807add6817a4636582876040516104e2929190610f1d565b60405180910390a160019350505050949350505050565b6001602052806000526040600020600091509050805461051890611155565b80601f016020809104026020016040519081016040528092919081815260200182805461054490611155565b80156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080836040516105ce9190610e4e565b9081526020016040518091039020541461061d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061490610f6d565b60405180910390fd5b8060008360405161062e9190610e4e565b9081526020016040518091039020819055507f0b71b7291a9fc3a0721b1959743945de91156f701b493bac77dcfaeba05cd8d38282604051610671929190610f1d565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b816001600083815260200190815260200160002090805190602001906106c892919061097c565b507fe42038eda0238692da8d8c200345a40ed84f713f2b07bfdfe04eda8824caabb833826040516106fa929190610e80565b60405180910390a15050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816002811115610793577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060028111156107cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156107fb577f00000000000000000000000000000000000000000000000000000000000000009050610977565b816002811115610834577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600281111561086e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561089c577f00000000000000000000000000000000000000000000000000000000000000009050610977565b8160028111156108d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028081111561090e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561093c577f00000000000000000000000000000000000000000000000000000000000000009050610977565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096e90610f4d565b60405180910390fd5b919050565b82805461098890611155565b90600052602060002090601f0160209004810192826109aa57600085556109f1565b82601f106109c357805160ff19168380011785556109f1565b828001600101855582156109f1579182015b828111156109f05782518255916020019190600101906109d5565b5b5090506109fe9190610a02565b5090565b5b80821115610a1b576000816000905550600101610a03565b5090565b6000610a32610a2d84610fed565b610fc8565b905082815260208101848484011115610a4a57600080fd5b610a55848285611113565b509392505050565b6000610a70610a6b8461101e565b610fc8565b905082815260208101848484011115610a8857600080fd5b610a93848285611113565b509392505050565b600081519050610aaa816112a2565b92915050565b600082601f830112610ac157600080fd5b8135610ad1848260208601610a1f565b91505092915050565b600081359050610ae9816112b9565b92915050565b600082601f830112610b0057600080fd5b8135610b10848260208601610a5d565b91505092915050565b600081359050610b28816112c9565b92915050565b600060208284031215610b4057600080fd5b6000610b4e84828501610a9b565b91505092915050565b60008060008060808587031215610b6d57600080fd5b6000610b7b87828801610ada565b9450506020610b8c87828801610b19565b9350506040610b9d87828801610b19565b925050606085013567ffffffffffffffff811115610bba57600080fd5b610bc687828801610ab0565b91505092959194509250565b600060208284031215610be457600080fd5b600082013567ffffffffffffffff811115610bfe57600080fd5b610c0a84828501610aef565b91505092915050565b60008060408385031215610c2657600080fd5b600083013567ffffffffffffffff811115610c4057600080fd5b610c4c85828601610aef565b9250506020610c5d85828601610b19565b9150509250929050565b600060208284031215610c7957600080fd5b6000610c8784828501610b19565b91505092915050565b6000610c9c8383610e30565b60208301905092915050565b610cb1816110cb565b82525050565b6000610cc28261105f565b610ccc818561108d565b9350610cd78361104f565b8060005b83811015610d08578151610cef8882610c90565b9750610cfa83611080565b925050600181019050610cdb565b5085935050505092915050565b610d1e816110dd565b82525050565b6000610d2f8261106a565b610d39818561109e565b9350610d49818560208601611122565b610d5281611216565b840191505092915050565b6000610d6882611075565b610d7281856110af565b9350610d82818560208601611122565b610d8b81611216565b840191505092915050565b6000610da182611075565b610dab81856110c0565b9350610dbb818560208601611122565b80840191505092915050565b6000610dd46011836110af565b9150610ddf82611227565b602082019050919050565b6000610df76014836110af565b9150610e0282611250565b602082019050919050565b6000610e1a6019836110af565b9150610e2582611279565b602082019050919050565b610e3981611109565b82525050565b610e4881611109565b82525050565b6000610e5a8284610d96565b915081905092915050565b6000602082019050610e7a6000830184610ca8565b92915050565b6000604082019050610e956000830185610ca8565b610ea26020830184610e3f565b9392505050565b6000602082019050610ebe6000830184610d15565b92915050565b60006040820190508181036000830152610ede8185610d24565b90508181036020830152610ef28184610cb7565b90509392505050565b60006020820190508181036000830152610f158184610d5d565b905092915050565b60006040820190508181036000830152610f378185610d5d565b9050610f466020830184610e3f565b9392505050565b60006020820190508181036000830152610f6681610dc7565b9050919050565b60006020820190508181036000830152610f8681610dea565b9050919050565b60006020820190508181036000830152610fa681610e0d565b9050919050565b6000602082019050610fc26000830184610e3f565b92915050565b6000610fd2610fe3565b9050610fde8282611187565b919050565b6000604051905090565b600067ffffffffffffffff821115611008576110076111e7565b5b61101182611216565b9050602081019050919050565b600067ffffffffffffffff821115611039576110386111e7565b5b61104282611216565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006110d6826110e9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611140578082015181840152602081019050611125565b8381111561114f576000848401525b50505050565b6000600282049050600182168061116d57607f821691505b60208210811415611181576111806111b8565b5b50919050565b61119082611216565b810181811067ffffffffffffffff821117156111af576111ae6111e7565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f756e6b6e6f776e206f7065726174696f6e000000000000000000000000000000600082015250565b7f7461626c6520616c726561647920657869737473000000000000000000000000600082015250565b7f534e41524b20766572696669636174696f6e206661696c656400000000000000600082015250565b6112ab816110dd565b81146112b657600080fd5b50565b600381106112c657600080fd5b50565b6112d281611109565b81146112dd57600080fd5b5056fea2646970667358221220a4eee82bc789af213931805599c3b2b0515c25a17a8c140ea36a8d46c4d1be7964736f6c63430008040033";

type ZkSQLConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZkSQLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZkSQL__factory extends ContractFactory {
  constructor(...args: ZkSQLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    insertVerifier_: PromiseOrValue<string>,
    updateVerifier_: PromiseOrValue<string>,
    deleteVerifier_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZkSQL> {
    return super.deploy(
      insertVerifier_,
      updateVerifier_,
      deleteVerifier_,
      overrides || {}
    ) as Promise<ZkSQL>;
  }
  override getDeployTransaction(
    insertVerifier_: PromiseOrValue<string>,
    updateVerifier_: PromiseOrValue<string>,
    deleteVerifier_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      insertVerifier_,
      updateVerifier_,
      deleteVerifier_,
      overrides || {}
    );
  }
  override attach(address: string): ZkSQL {
    return super.attach(address) as ZkSQL;
  }
  override connect(signer: Signer): ZkSQL__factory {
    return super.connect(signer) as ZkSQL__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZkSQLInterface {
    return new utils.Interface(_abi) as ZkSQLInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZkSQL {
    return new Contract(address, _abi, signerOrProvider) as ZkSQL;
  }
}
